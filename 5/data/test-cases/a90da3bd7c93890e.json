{"uid":"a90da3bd7c93890e","name":"test_github","fullName":"tests.test_selene#test_github","historyId":"0139c44e2d86c93c634c3d6d6688f462","time":{"start":1670966873152,"stop":1670966875104,"duration":1952},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55ac0d9662a3 <unknown>\n#1 0x55ac0d724f77 <unknown>\n#2 0x55ac0d74d5f7 <unknown>\n#3 0x55ac0d7497d0 <unknown>\n#4 0x55ac0d78a0b7 <unknown>\n#5 0x55ac0d789a5f <unknown>\n#6 0x55ac0d781903 <unknown>\n#7 0x55ac0d754ece <unknown>\n#8 0x55ac0d755fde <unknown>\n#9 0x55ac0d9b663e <unknown>\n#10 0x55ac0d9b9b79 <unknown>\n#11 0x55ac0d99c89e <unknown>\n#12 0x55ac0d9baa83 <unknown>\n#13 0x55ac0d98f505 <unknown>\n#14 0x55ac0d9dbca8 <unknown>\n#15 0x55ac0d9dbe36 <unknown>\n#16 0x55ac0d9f7333 <unknown>\n#17 0x7fc0153c8b43 <unknown>","statusTrace":"def test_github():\n>       browser.open(\"https://github.com\")\n\ntests/test_selene.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/browser.py:83: in open\n    self.config.get_or_create_driver().get(url)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:301: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:135: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:116: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:203: in <lambda>\n    lambda: self._set_drivers_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:277: in _set_drivers_from_webdriver_manager\n    return {\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:252: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:69: in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:92: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:270: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe98f7d210>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55ac0d9dbe36 \\\\u003Cunknown>\\\\n#16 0x55ac0d9f7333 \\\\u003Cunknown>\\\\n#17 0x7fc0153c8b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55ac0d9662a3 <unknown>\nE       #1 0x55ac0d724f77 <unknown>\nE       #2 0x55ac0d74d5f7 <unknown>\nE       #3 0x55ac0d7497d0 <unknown>\nE       #4 0x55ac0d78a0b7 <unknown>\nE       #5 0x55ac0d789a5f <unknown>\nE       #6 0x55ac0d781903 <unknown>\nE       #7 0x55ac0d754ece <unknown>\nE       #8 0x55ac0d755fde <unknown>\nE       #9 0x55ac0d9b663e <unknown>\nE       #10 0x55ac0d9b9b79 <unknown>\nE       #11 0x55ac0d99c89e <unknown>\nE       #12 0x55ac0d9baa83 <unknown>\nE       #13 0x55ac0d98f505 <unknown>\nE       #14 0x55ac0d9dbca8 <unknown>\nE       #15 0x55ac0d9dbe36 <unknown>\nE       #16 0x55ac0d9f7333 <unknown>\nE       #17 0x7fc0153c8b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:243: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55ac0d9662a3 <unknown>\n#1 0x55ac0d724f77 <unknown>\n#2 0x55ac0d74d5f7 <unknown>\n#3 0x55ac0d7497d0 <unknown>\n#4 0x55ac0d78a0b7 <unknown>\n#5 0x55ac0d789a5f <unknown>\n#6 0x55ac0d781903 <unknown>\n#7 0x55ac0d754ece <unknown>\n#8 0x55ac0d755fde <unknown>\n#9 0x55ac0d9b663e <unknown>\n#10 0x55ac0d9b9b79 <unknown>\n#11 0x55ac0d99c89e <unknown>\n#12 0x55ac0d9baa83 <unknown>\n#13 0x55ac0d98f505 <unknown>\n#14 0x55ac0d9dbca8 <unknown>\n#15 0x55ac0d9dbe36 <unknown>\n#16 0x55ac0d9f7333 <unknown>\n#17 0x7fc0153c8b43 <unknown>","statusTrace":"def test_github():\n>       browser.open(\"https://github.com\")\n\ntests/test_selene.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/browser.py:83: in open\n    self.config.get_or_create_driver().get(url)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:301: in get_or_create_driver\n    return self._source.get_or_create()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:135: in get_or_create\n    return self.create()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:116: in create\n    self._stored = self._set_driver()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:203: in <lambda>\n    lambda: self._set_drivers_from_webdriver_manager()\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:277: in _set_drivers_from_webdriver_manager\n    return {\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selene/support/shared/config.py:252: in get_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:69: in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:92: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:270: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:363: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbe98f7d210>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55ac0d9dbe36 \\\\u003Cunknown>\\\\n#16 0x55ac0d9f7333 \\\\u003Cunknown>\\\\n#17 0x7fc0153c8b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55ac0d9662a3 <unknown>\nE       #1 0x55ac0d724f77 <unknown>\nE       #2 0x55ac0d74d5f7 <unknown>\nE       #3 0x55ac0d7497d0 <unknown>\nE       #4 0x55ac0d78a0b7 <unknown>\nE       #5 0x55ac0d789a5f <unknown>\nE       #6 0x55ac0d781903 <unknown>\nE       #7 0x55ac0d754ece <unknown>\nE       #8 0x55ac0d755fde <unknown>\nE       #9 0x55ac0d9b663e <unknown>\nE       #10 0x55ac0d9b9b79 <unknown>\nE       #11 0x55ac0d99c89e <unknown>\nE       #12 0x55ac0d9baa83 <unknown>\nE       #13 0x55ac0d98f505 <unknown>\nE       #14 0x55ac0d9dbca8 <unknown>\nE       #15 0x55ac0d9dbe36 <unknown>\nE       #16 0x55ac0d9f7333 <unknown>\nE       #17 0x7fc0153c8b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.0/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:243: WebDriverException","steps":[],"attachments":[{"uid":"bb1143745989b86b","name":"stderr","source":"bb1143745989b86b.txt","type":"text/plain","size":160}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_selene"},{"name":"host","value":"fv-az168-192"},{"name":"thread","value":"2282-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_selene"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"7e98740e913c4715","reportUrl":"https://Alderon-first.github.io/qa_guru_python_1_7/5//#testresult/7e98740e913c4715","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5583d703c2a3 <unknown>\n#1 0x5583d6dfaf77 <unknown>\n#2 0x5583d6e235f7 <unknown>\n#3 0x5583d6e1f7d0 <unknown>\n#4 0x5583d6e600b7 <unknown>\n#5 0x5583d6e5fa5f <unknown>\n#6 0x5583d6e57903 <unknown>\n#7 0x5583d6e2aece <unknown>\n#8 0x5583d6e2bfde <unknown>\n#9 0x5583d708c63e <unknown>\n#10 0x5583d708fb79 <unknown>\n#11 0x5583d707289e <unknown>\n#12 0x5583d7090a83 <unknown>\n#13 0x5583d7065505 <unknown>\n#14 0x5583d70b1ca8 <unknown>\n#15 0x5583d70b1e36 <unknown>\n#16 0x5583d70cd333 <unknown>\n#17 0x7f0ea2558b43 <unknown>","time":{"start":1670966688320,"stop":1670966690154,"duration":1834}},{"uid":"b191dfddbea1436f","reportUrl":"https://Alderon-first.github.io/qa_guru_python_1_7/4//#testresult/b191dfddbea1436f","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5603fc7402a3 <unknown>\n#1 0x5603fc4fef77 <unknown>\n#2 0x5603fc5275f7 <unknown>\n#3 0x5603fc5237d0 <unknown>\n#4 0x5603fc5640b7 <unknown>\n#5 0x5603fc563a5f <unknown>\n#6 0x5603fc55b903 <unknown>\n#7 0x5603fc52eece <unknown>\n#8 0x5603fc52ffde <unknown>\n#9 0x5603fc79063e <unknown>\n#10 0x5603fc793b79 <unknown>\n#11 0x5603fc77689e <unknown>\n#12 0x5603fc794a83 <unknown>\n#13 0x5603fc769505 <unknown>\n#14 0x5603fc7b5ca8 <unknown>\n#15 0x5603fc7b5e36 <unknown>\n#16 0x5603fc7d1333 <unknown>\n#17 0x7fe6ca10fb43 <unknown>","time":{"start":1670965670568,"stop":1670965675730,"duration":5162}},{"uid":"1a510562f142f0b7","reportUrl":"https://Alderon-first.github.io/qa_guru_python_1_7/3//#testresult/1a510562f142f0b7","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x558440d462a3 <unknown>\n#1 0x558440b04f77 <unknown>\n#2 0x558440b2d5f7 <unknown>\n#3 0x558440b297d0 <unknown>\n#4 0x558440b6a0b7 <unknown>\n#5 0x558440b69a5f <unknown>\n#6 0x558440b61903 <unknown>\n#7 0x558440b34ece <unknown>\n#8 0x558440b35fde <unknown>\n#9 0x558440d9663e <unknown>\n#10 0x558440d99b79 <unknown>\n#11 0x558440d7c89e <unknown>\n#12 0x558440d9aa83 <unknown>\n#13 0x558440d6f505 <unknown>\n#14 0x558440dbbca8 <unknown>\n#15 0x558440dbbe36 <unknown>\n#16 0x558440dd7333 <unknown>\n#17 0x7f90dfb17b43 <unknown>","time":{"start":1670961198383,"stop":1670961201046,"duration":2663}},{"uid":"ccfd902c7fd62ba2","reportUrl":"https://Alderon-first.github.io/qa_guru_python_1_7/2//#testresult/ccfd902c7fd62ba2","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a6fead02a3 <unknown>\n#1 0x55a6fe88ef77 <unknown>\n#2 0x55a6fe8b75f7 <unknown>\n#3 0x55a6fe8b37d0 <unknown>\n#4 0x55a6fe8f40b7 <unknown>\n#5 0x55a6fe8f3a5f <unknown>\n#6 0x55a6fe8eb903 <unknown>\n#7 0x55a6fe8beece <unknown>\n#8 0x55a6fe8bffde <unknown>\n#9 0x55a6feb2063e <unknown>\n#10 0x55a6feb23b79 <unknown>\n#11 0x55a6feb0689e <unknown>\n#12 0x55a6feb24a83 <unknown>\n#13 0x55a6feaf9505 <unknown>\n#14 0x55a6feb45ca8 <unknown>\n#15 0x55a6feb45e36 <unknown>\n#16 0x55a6feb61333 <unknown>\n#17 0x7f4e59072b43 <unknown>","time":{"start":1670961147426,"stop":1670961149170,"duration":1744}},{"uid":"b9e984c7bf3936e5","reportUrl":"https://Alderon-first.github.io/qa_guru_python_1_7/1//#testresult/b9e984c7bf3936e5","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b69446d2a3 <unknown>\n#1 0x55b69422bf77 <unknown>\n#2 0x55b6942545f7 <unknown>\n#3 0x55b6942507d0 <unknown>\n#4 0x55b6942910b7 <unknown>\n#5 0x55b694290a5f <unknown>\n#6 0x55b694288903 <unknown>\n#7 0x55b69425bece <unknown>\n#8 0x55b69425cfde <unknown>\n#9 0x55b6944bd63e <unknown>\n#10 0x55b6944c0b79 <unknown>\n#11 0x55b6944a389e <unknown>\n#12 0x55b6944c1a83 <unknown>\n#13 0x55b694496505 <unknown>\n#14 0x55b6944e2ca8 <unknown>\n#15 0x55b6944e2e36 <unknown>\n#16 0x55b6944fe333 <unknown>\n#17 0x7f34bee4bb43 <unknown>","time":{"start":1670956242438,"stop":1670956244685,"duration":2247}}]},"tags":[]},"source":"a90da3bd7c93890e.json","parameterValues":[]}